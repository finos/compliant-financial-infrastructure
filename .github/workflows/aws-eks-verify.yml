name: aws eks terraform verification

on:
  pull_request:
    paths:
      - ".github/actions/terraform-*/action.yml"
      - ".github/workflows/aws-eks-verify.yml"
      - "accelerators/kubernetes/eks/**"
      - "!**.md"
  workflow_dispatch:

env:
  TF_IN_AUTOMATION: true
  TF_INPUT: false
  TF_CLI_ARGS: "-no-color"
  WORKING_DIRECTORY: accelerators/kubernetes/eks/tf_cdmc_aws_eks
  PROBR_DIRECTORY: accelerators/kubernetes/eks/probr

jobs:
  validate:
    runs-on: ubuntu-20.04
    outputs:
      eks-ok: ${{ steps.check-eks-secrets.outputs.eks-ok }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: "~1.0.0"
      - name: Validate eks terraform
        uses: ./.github/actions/terraform-validate
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: check for secrets needed for eks deploy
        id: check-eks-secrets
        run: |
          if [ ! -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
            echo "::set-output name=eks-ok::true"
          fi

  ephemeral-deploy:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    needs: validate
    if: ${{ needs.validate.outputs.eks-ok == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: "~1.0.0"

      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
      - name: Make sure we have destroyed any leftover resources from previous runs
        uses: ./.github/actions/terraform-destroy
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Apply eks terraform
        uses: ./.github/actions/terraform-apply
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Run Probr Kubernetes CIS Tests
        id: probr
        uses: addnab/docker-run-action@v3
        with:
          image: eknight/probr:v0.1.3-rc # https://github.com/probr/probr-docker
          options:
            -v ${{ github.workspace }}/${{ env.PROBR_DIRECTORY }}:/probr/run
            -v ${{ github.workspace }}/${{ env.WORKING_DIRECTORY }}/kubeconfig_cfi-eks:/root/.kube/config
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          shell: "/probr/entrypoint.sh"
          run: ""
        continue-on-error: true

      - name: Generate Probr HTML
        uses: addnab/docker-run-action@v3
        with:
          image: eknight/probr-view:v0.1.0 # https://github.com/probr/view-cucumber-html
          options: -v ${{ github.workspace }}/${{ env.PROBR_DIRECTORY }}:/probr/run
          run: "node parse.js /probr/run/cucumber v0.1.1"
        continue-on-error: true

      - uses: actions/upload-artifact@v2
        with:
          name: probr-full-output
          path: ${{ github.workspace }}/${{ env.PROBR_DIRECTORY }}

      - uses: actions/upload-artifact@v2
        with:
          name: probr-report
          path: ${{ github.workspace }}/${{ env.PROBR_DIRECTORY }}/cucumber/cucumber_report.html

      - name: Get eks badge
        uses: ./.github/actions/status-badge
        id: set_badge        
        with:
          color: "Gold"
          badge_name: eks-terraform
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Destroy eks terraform
        if: always()
        uses: ./.github/actions/terraform-destroy
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Check Probr Validation Result
        if: steps.probr.outcome == 'failure'
        run: |
          echo Probr did not successfully validate the EKS cluster.
          echo Please review the Probr artifact for detailed information.
        # TODO: Add 'exit 1' for failures
